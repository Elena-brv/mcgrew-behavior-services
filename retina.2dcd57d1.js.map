{"version":3,"sources":["scripts/retina.js"],"names":["root","exports","window","config","retinaImageSuffix","check_mime_type","force_original_dimensions","Retina","configure","options","prop","hasOwnProperty","init","context","existing_onload","onload","images","i","image","document","getElementsByTagName","retinaImages","length","getAttributeNode","push","RetinaImage","isRetina","devicePixelRatio","matchMedia","matches","regexMatch","suffixReplace","match","RetinaImagePath","path","at_2x_path","perform_check","undefined","createElement","locationObject","href","pathname","replace","parts","split","join","el","getAttribute","that","check_2x_variant","hasVariant","swap","confirmed_paths","prototype","is_external","domain","callback","http","XMLHttpRequest","open","onreadystatechange","readyState","status","type","getResponseHeader","send","load","complete","setAttribute","offsetWidth","offsetHeight","setTimeout"],"mappings":"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","file":"retina.2dcd57d1.js","sourceRoot":"..\\src","sourcesContent":["/*!\n * Retina.js v1.3.0\n *\n * Copyright 2014 Imulus, LLC\n * Released under the MIT license\n *\n * Retina.js is an open source script that makes it easy to serve\n * high-resolution images to devices with retina displays.\n */\n\n(function() {\n    var root = (typeof exports === 'undefined' ? window : exports);\n    var config = {\n        // An option to choose a suffix for 2x images\n        retinaImageSuffix : '@2x',\n\n        // Ensure Content-Type is an image before trying to load @2x image\n        // https://github.com/imulus/retinajs/pull/45)\n        check_mime_type: true,\n\n        // Resize high-resolution images to original image's pixel dimensions\n        // https://github.com/imulus/retinajs/issues/8\n        force_original_dimensions: true\n    };\n\n    function Retina() {}\n\n    root.Retina = Retina;\n\n    Retina.configure = function(options) {\n        if (options === null) {\n            options = {};\n        }\n\n        for (var prop in options) {\n            if (options.hasOwnProperty(prop)) {\n                config[prop] = options[prop];\n            }\n        }\n    };\n\n    Retina.init = function(context) {\n        if (context === null) {\n            context = root;\n        }\n\n        var existing_onload = context.onload || function(){};\n\n        context.onload = function() {\n            var images = document.getElementsByTagName('img'), retinaImages = [], i, image;\n            for (i = 0; i < images.length; i += 1) {\n                image = images[i];\n                if (!!!image.getAttributeNode('data-no-retina')) {\n                    retinaImages.push(new RetinaImage(image));\n                }\n            }\n            existing_onload();\n        };\n    };\n\n    Retina.isRetina = function(){\n        var mediaQuery = '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)';\n\n        if (root.devicePixelRatio > 1) {\n            return true;\n        }\n\n        if (root.matchMedia && root.matchMedia(mediaQuery).matches) {\n            return true;\n        }\n\n        return false;\n    };\n\n\n    var regexMatch = /\\.\\w+$/;\n    function suffixReplace (match) {\n        return config.retinaImageSuffix + match;\n    }\n\n    function RetinaImagePath(path, at_2x_path) {\n        this.path = path || '';\n        if (typeof at_2x_path !== 'undefined' && at_2x_path !== null) {\n            this.at_2x_path = at_2x_path;\n            this.perform_check = false;\n        } else {\n            if (undefined !== document.createElement) {\n                var locationObject = document.createElement('a');\n                locationObject.href = this.path;\n                locationObject.pathname = locationObject.pathname.replace(regexMatch, suffixReplace);\n                this.at_2x_path = locationObject.href;\n            } else {\n                var parts = this.path.split('?');\n                parts[0] = parts[0].replace(regexMatch, suffixReplace);\n                this.at_2x_path = parts.join('?');\n            }\n            this.perform_check = true;\n        }\n    }\n\n    root.RetinaImagePath = RetinaImagePath;\n\n    RetinaImagePath.confirmed_paths = [];\n\n    RetinaImagePath.prototype.is_external = function() {\n        return !!(this.path.match(/^https?\\:/i) && !this.path.match('//' + document.domain) );\n    };\n\n    RetinaImagePath.prototype.check_2x_variant = function(callback) {\n        var http, that = this;\n        if (this.is_external()) {\n            return callback(false);\n        } else if (!this.perform_check && typeof this.at_2x_path !== 'undefined' && this.at_2x_path !== null) {\n            return callback(true);\n        } else if (this.at_2x_path in RetinaImagePath.confirmed_paths) {\n            return callback(true);\n        } else {\n            http = new XMLHttpRequest();\n            http.open('HEAD', this.at_2x_path);\n            http.onreadystatechange = function() {\n                if (http.readyState !== 4) {\n                    return callback(false);\n                }\n\n                if (http.status >= 200 && http.status <= 399) {\n                    if (config.check_mime_type) {\n                        var type = http.getResponseHeader('Content-Type');\n                        if (type === null || !type.match(/^image/i)) {\n                            return callback(false);\n                        }\n                    }\n\n                    RetinaImagePath.confirmed_paths.push(that.at_2x_path);\n                    return callback(true);\n                } else {\n                    return callback(false);\n                }\n            };\n            http.send();\n        }\n    };\n\n\n    function RetinaImage(el) {\n        this.el = el;\n        this.path = new RetinaImagePath(this.el.getAttribute('src'), this.el.getAttribute('data-at2x'));\n        var that = this;\n        this.path.check_2x_variant(function(hasVariant) {\n            if (hasVariant) {\n                that.swap();\n            }\n        });\n    }\n\n    root.RetinaImage = RetinaImage;\n\n    RetinaImage.prototype.swap = function(path) {\n        if (typeof path === 'undefined') {\n            path = this.path.at_2x_path;\n        }\n\n        var that = this;\n        function load() {\n            if (! that.el.complete) {\n                setTimeout(load, 5);\n            } else {\n                if (config.force_original_dimensions) {\n                    that.el.setAttribute('width', that.el.offsetWidth);\n                    that.el.setAttribute('height', that.el.offsetHeight);\n                }\n\n                that.el.setAttribute('src', path);\n            }\n        }\n        load();\n    };\n\n\n    if (Retina.isRetina()) {\n        Retina.init(root);\n    }\n})();\n"]}